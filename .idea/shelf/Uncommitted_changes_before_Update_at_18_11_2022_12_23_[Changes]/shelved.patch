Index: src/main.java
===================================================================
diff --git a/src/main.java b/src/main.java
--- a/src/main.java	
+++ b/src/main.java	
@@ -5,14 +5,15 @@
 public class main {
     public static void main(String[] args) {
         int[] array = {3,0,1,8,7,2,5,4,9,6};
+        int[] A2 ={12,7,10,9,5,4,11,1,6,8,2};
         int[] array2 =Generate.generateArray(3);
 
         //System.out.println("\n"+FolkSortHw2(array2)/1000000 + "ms");
         int [] newArray = {12,7,10,4,5,3,11,1,6,8,2};
 
-        Missing.MissingElement(newArray,0, newArray.length-1);
+        Missing.MissingElement(A2,0, A2.length-1);
 
-        FolkDance.writeArray(newArray);
+        FolkDance.writeArray(A2);
     }
 
     public static void MissingHw1(int[] arr){
Index: src/Akdeniz_Missing/Missing.java
===================================================================
diff --git a/src/Akdeniz_Missing/Missing.java b/src/Akdeniz_Missing/Missing.java
--- a/src/Akdeniz_Missing/Missing.java	
+++ b/src/Akdeniz_Missing/Missing.java	
@@ -12,7 +12,7 @@
         arr[j] = temp;
     }
     private static int partition(int[] arr, int low, int high){
-        int pivot = arr[high];
+        int pivot = arr[(int) (Math.random() * (arr.length))];
         int i = low-1;
         for (int j = low; j <high - 1 ; j++) {
             if(arr[j] <= pivot){
@@ -24,15 +24,16 @@
         return i+1;
     }
 
+
     public static void MissingElement(int[] arr,int low,int high){
 
 
         if(low<high) {
             int i = partition(arr, low, high);
-            MissingElement(arr, i+1, high);
+            MissingElement(arr, low, i-1);
         }else {
             for (int i = 0; i <arr.length+1 ; i++) {
-                if(arr[i]-arr[i+1] >1){
+                if(arr[i]-arr[i+1] > -1){
                     System.out.println(i+2);
                     break;
                 }
